#include <iostream>
#include <bits/stdc++.h>
using namespace std;
//VERZIJA EDEN SO TRI REDA
int main()
{
    int n; //br na luge
    cin>>n;
    int x,y,z; //lk, pasos, vozacka
    string ime,prezime;
    vector < pair<string,string> > covek; // ime i prezime
    queue<int> licna;   //red za licna
    queue<int> pasos;   //red za pasos
    queue<int> vozacka; //red za vozacka
    int suma[n];  // za da znaeme kolku dokumenti ima preostanato kaj sekoj
    for(int i=0;i<n;i++)
    {
        suma[i]=0;
    }
    int mat [n][3]; // da pamtime koj kaj treba da odi
    for(int i=0;i<n;i++)
    {
        cin>>ime>>prezime;
        covek.push_back(make_pair(ime,prezime));
        cin>>x>>y>>z;
        mat[i][0]=x;
        mat[i][1]=y;
        mat[i][2]=z;
        suma[i]=x+y+z;

        if(suma[i]==0)
        {
            cout<<covek[i].first<<" "<<covek[i].second<<endl;
        }
        else if(x==1)
        {
            licna.push(i);
        }
        else if(y==1)
        {
            pasos.push(i);
        }
        else if(z==1)
        {
            vozacka.push(i);
        }
    }
    while(!licna.empty())
    {
        int temp=licna.front();
        licna.pop();
        suma[temp]--;
        if(suma[temp]==0)
            cout<<covek[i].first<<" "<<covek[i].second<<endl;
        else if(mat[temp][1]==1)
            pasos.push(temp);
        else if(mat[temp][2]==1)
            vozacka.push(temp);
    }
    while(!pasos.empty())
    {
        int temp=pasos.front();
        pasos.pop();
        suma[temp]--;
        if(suma[temp]==0)
            cout<<covek[i].first<<" "<<covek[i].second<<endl;
        else if(mat[temp][2]==1)
            vozacka.push(temp);
    }
    while(!vozacka.empty())
    {
        int temp=vozacka.front();
        vozacka.pop();
        suma[temp]--;
        cout<<covek[i].first<<" "<<covek[i].second<<endl;
    }
    return 0;
}
//VERZIJA DVA
/*int main()
{
    int n; //br na luge
    cin>>n;
    int x,y,z; //lk, pasos, vozacka
    string ime,prezime;
    vector < pair<string,string> > covek; // ime i prezime
    priority_queue <pair<int,int> > pq;
    for(int i=0;i<n;i++)
    {
        cin>>ime>>prezime;
        covek.push_back(make_pair(ime,prezime));
        cin>>x>>y>>z;
        int s=x*4+y*2+z;
        if(s==0)
        {
            cout<<covek[i].first<<" "<<covek[i].second<<endl;
        }else
        {
            pq.push(make_pair(s,i));
        }
    }
    while(!pq.empty())
    {
        pair <int,int> temp = pq.top();
        cout<<covek[temp.second].first<<" "<<covek[temp.second].second<<endl;
        pq.pop();
    }

    return 0;
}*/

